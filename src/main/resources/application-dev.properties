#开发（dev）环境
server.port=9093
#server.context-path=/dev

#单资源库
#jdbc:mysql://127.0.0.1:3306/sxxl_analysis?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
spring.datasource.url=jdbc:mysql://localhost:3306/sxxl_analytics?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5

#多资源库Jpa
#数据源1  单资源库和多数据库同时 springboot.implicit_terrorists上面的单数据源失效   
spring.datasource.primary.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true
spring.datasource.primary.username=root
spring.datasource.primary.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-active=10
spring.datasource.primary.max-idle=5
spring.datasource.primary.min-idle=0
#数据源2
spring.datasource.secondary.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true
spring.datasource.secondary.username=root
spring.datasource.secondary.password=root
spring.datasource.secondary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.secondary.max-active=10
spring.datasource.secondary.max-idle=5
spring.datasource.secondary.min-idle=0
#//blog.csdn.net/qq_41690306/java/article/details/79304501

#showSql路径要更改   打印sql
logging.level.com.demomodel.configure.doubledatasource.textdoubledatasource.master.map= debug
logging.level.com.demomodel.configure.doubledatasource.textdoubledatasource.secondary.map= debug


#hibernate配置
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql= true
#dao层很简单，就是一个接口，然后继承JpaRepository<Entity,ID>就可以了。
#service层就是调用dao层的方法。为了解决hibernate懒加载的问题，
#我们需要在service层接口上注入@Transaction注解。如果不加注解，可以在配置文件中加入配置
#在多数据源只会对主数据源生效，而其他数据源不会生效
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#前端html的配置，解除严格语法检查，前端才用到
#spring.thymeleaf.cache=false
#spring.thymeleaf.mode=LEGACYHTML5

#注意注意
mybatis.mapper-locations=classpath:/mapper/*Mapper.xml
#驼峰命名
#mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.mapUnderscoreToCamelCase=true

#redis集群的配置 com.demomodel.utils.redis.jedisCluster.RedisClusterConfig
#spring.redis.cluster.nodes=127.0.0.1:6379
#spring.redis.cluster.maxTotal=200
#spring.redis.cluster.maxIdle=8
#spring.redis.cluster.minIdle=2


# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000