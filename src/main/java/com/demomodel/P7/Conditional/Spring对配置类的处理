配置类解析阶段
会得到一批配置类的信息，和一些需要注册的bean

bean注册阶段
将配置类解析阶段得到的配置类和需要注册的bean注册到spring容器中

看一下什么是配置类
类中有下面任意注解之一的就属于配置类：
类上有@Compontent注解
类上有@Configuration注解
类上有@CompontentScan注解
类上有@Import注解
类上有@ImportResource注解
类中有@Bean标注的方法
原文链接：https://blog.csdn.net/likun557/article/details/105108901
整个过程大致的过程如下：

通常我们会通过new AnnotationConfigApplicationContext()传入多个配置类来启动spring容器

spring对传入的多个配置类进行解析

*1、配置类解析阶段：这个过程就是处理配置类上面6中注解的过程，此过程中又会发现很多新的配置类，
比如@Import导入的一批新的类刚好也符合配置类，而被@CompontentScan扫描到的一些类刚好也是配置类；
此时会对这些新产生的配置类进行同样的过程解析

*2、bean注册阶段：配置类解析后，会得到一批配置类和一批需要注册的bean，此时spring容器会将
这批配置类作为bean注册到spring容器，同样也会将这批需要注册的bean注册到spring容器
3、经过上面第3个阶段之后，spring容器中会注册很多新的bean，这些新的bean中可能又有很多新的配置类

4、Spring从容器中将所有bean拿出来，遍历一下，会过滤得到一批未处理的新的配置类，继续交给第3步进行处理
5、step3到step6，这个过程会经历很多次，直到完成所有配置类的解析和bean的注册
原文链接：https://blog.csdn.net/likun557/article/details/105108901


从上面过程中可以了解到：

可以在配置类上面加上@Conditional注解，来控制是否需要解析这个配置类，配置类如果不被解析，那么这个配置上面6种注解的解析都会被跳过
可以在被注册的bean上面加上@Conditional注解，来控制这个bean是否需要注册到spring容器中
如果配置类不会被注册到容器，那么这个配置类解析所产生的所有新的配置类及所产生的所有新的bean都不会被注册到容器
一个配置类被spring处理有2个阶段：配置类解析阶段、bean注册阶段（将配置类作为bean被注册到spring容器)。
如果将Condition接口的实现类作为配置类上@Conditional中，那么这个条件会对两个阶段都有效，此时通过Condition是无法精细的控制某个阶段的，如果想控制某个阶段，比如可以让他解析，但是不能让他注册，此时就就需要用到另外一个接口了：ConfigurationCondition
原文链接：https://blog.csdn.net/likun557/article/details/105108901


