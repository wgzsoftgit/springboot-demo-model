	优点	缺点
方法1(每个线程维护一个KafkaConsumer)	方便实现
速度较快，因为不需要任何线程间交互
易于维护分区内的消息顺序	

更多的TCP连接开销(每个线程都要维护若干个TCP连接)
consumer数受限于topic分区数，扩展性差
频繁请求导致吞吐量下降
线程自己处理消费到的消息可能会导致超时，从而造成rebalance

方法2 (单个(或多个)consumer，多个worker线程)	可独立扩展consumer数和worker数，伸缩性好	

实现麻烦
通常难于维护分区内的消息顺序
处理链路变长，导致难以保证提交位移的语义正确性 
https://www.cnblogs.com/huxi2b/p/6124937.html