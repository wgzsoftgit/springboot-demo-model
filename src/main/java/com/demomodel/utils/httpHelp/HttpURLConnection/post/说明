a:) HttpURLConnection的connect()函数，实际上只是建立了一个与服务器的tcp连接，并没有实际发送http请求。 
    无论是post还是get，http请求实际上直到HttpURLConnection的getInputStream()这个函数里面才正式发送出去。 
 b:) 在用POST方式发送URL请求时，URL请求参数的设定顺序是重中之重， 
    对connection对象的一切配置（那一堆set函数） 
    都必须要在connect()函数执行之前完成。而对outputStream的写操作，又必须要在inputStream的读操作之前。 
    这些顺序实际上是由http请求的格式决定的。 
    如果inputStream读操作在outputStream的写操作之前，会抛出例外： 
    java.net.ProtocolException: Cannot write output after reading input....... 
c:) http请求实际上由两部分组成， 
    一个是http头，所有关于此次http请求的配置都在http头里面定义， 
           一个是正文content。 
    connect()函数会根据HttpURLConnection对象的配置值生成http头部信息，因此在调用connect函数之前， 
    就必须把所有的配置准备好。 
d:) 在http头后面紧跟着的是http请求的正文，正文的内容是通过outputStream流写入的， 
    实际上outputStream不是一个网络流，充其量是个字符串流，往里面写入的东西不会立即发送到网络， 
    而是存在于内存缓冲区中，待outputStream流关闭时，根据输入的内容生成http正文。 
    至此，http请求的东西已经全部准备就绪。在getInputStream()函数调用的时候，就会把准备好的http请求 
    正式发送到服务器了，然后返回一个输入流，用于读取服务器对于此次http请求的返回信息。由于http 
    请求在getInputStream的时候已经发送出去了（包括http头和正文），因此在getInputStream()函数 
    之后对connection对象进行设置（对http头的信息进行修改）或者写入outputStream（对正文进行修改） 
    都是没有意义的了，执行这些操作会导致异常的发生。 