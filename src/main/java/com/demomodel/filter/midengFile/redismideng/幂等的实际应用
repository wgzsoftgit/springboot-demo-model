幂等性, 通俗的说就是一个接口, 多次发起同一个请求, 必须保证操作只能执行一次
比如:

订单接口, 不能多次创建订单
支付接口, 重复支付同一笔订单只能扣一次钱
支付宝回调接口, 可能会多次回调, 必须处理重复回调
普通表单提交接口, 因为网络超时等原因多次点击提交, 只能成功一次
等等
//https://www.jianshu.com/p/6189275403ed

不管是传统行业还是互联网行业，我们都需要保证大部分操作是幂等性的，简单点说，就是无论用户点击多少次，
操作多少遍，产生的结果都是一样的，是唯一的。而今次公司的项目里，又被我遇到了这么一个幂等性的问题，
就是用户的余额充值、创建订单和订单支付，不管用户点击多少次，只会有一条充值记录，一条新订单记录，一条订单支付记录。

技术方案
现在使用比较广泛的方案都是基于Redis。
方案：Redis+token -------------------------------

处理流程：数据提交前，前端要向服务端的申请token，token（带有过期时间）放到redis；当数据提交时带上token，
如果删除token成功则表明token未过期，然后进行业务逻辑，否则就是token已过期，提示前端请勿重复提交数据。
而我将使用不同的方案。因为此时前后端对接已走一半，不想让前端再增加请求token的接口（毕竟后端能搞定的，还是别麻烦前端同学了）。
方案：自定义注解+分布式锁

处理流程：将需要幂等性的接口加上自定义注解。然后编写一个切面，在around方法里逻辑：尝试获取分布式锁(带过期时间)，
成功表明没重复提交，否则就是重复提交了。


唯一索引           -- 防止新增脏数据
token机制     -- 防止页面重复提交
悲观锁 -- 获取数据的时候加锁(锁表或锁行)
乐观锁 -- 基于版本号version实现, 在更新数据那一刻校验数据
分布式锁 -- redis(jedis、redisson)或zookeeper实现
状态机 -- 状态变更, 更新数据时判断状态
链接：https://www.jianshu.com/p/6189275403ed
