1.如果前后端传的数据都是json，那么后台接数据，传数据都可以用@JsonFormat。

2.@DateTimeFormat适合后端  接收   前端传来的数据，不管是不是json都可以正确转换成Date型数据，只要前端传来的格式正确且后端@DateTimeFormat的pattern写正确了，但是这个注解无法将Date型数据用json传到后端去。
//：https://blog.csdn.net/qq_41570658/java/article/details/89379557
从数据库查询出的  结果为 时间戳
   在该字段上加
   // 在属性或者get方法上加此注解
@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")
private Date createtime;
  
  方案二
  
/**
 * @author 在属性或者get方法上加入@JsonSerialize(using=DateFormatSerializer.class)
 *
 */
 
public class DateFormatSerializer extends JsonSerializer<Date> {
 
    @Override
    public void serialize(Date value, JsonGenerator gen, SerializerProvider serializers)
            throws IOException, JsonProcessingException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String datestr = sdf.format(value);
        gen.writeString(datestr);
    }
 
}
————————————————
版权声明：本文为CSDN博主「年少有为_知进退」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_41570658/java/article/details/89379557
@Controller
@RequestMapping("")
public class ProductbaseEditionController extends BaseController {
    
    @GetMapping("/productbaseEdition")
    public String productbaseEdition(@DateTimeFormat(pattern="yyyy-MM-dd HH:mm:ss")Date eTime) {
        System.out.println("test   time:"+eTime);
        return "productbaseEdition/list";
    }
}
————————————————
版权声明：本文为CSDN博主「年少有为_知进退」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_41570658/java/article/details/89379557
